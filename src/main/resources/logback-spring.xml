<?xml version="1.0" encoding="UTF-8"?>
<configuration>
<!--参考：https://www.cnblogs.com/warking/p/5710303.html-->
    <!-- 文件路径 -->
    <property name="Log_Home" value="logs"/>
    <!--appender 负责写日志的组件，它有两个必要属性name和class。name指定appender名称，class指定appender的全限定名-->
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    <!--<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">　　　　　　　　　　　-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">　　　　　　　　　　　　　　-->
            <!--<fileNamePattern>${Log_Home}/logFile.%d{yyyy-MM-dd}.log</fileNamePattern>　　　　　　　　　　　　　　-->
            <!--<maxHistory>30</maxHistory>　　　　　　　　　　　-->
        <!--</rollingPolicy>　　　　　　　　　　　　-->
        <!--<encoder>　　　　　　　　　　　　　　-->
            <!--<pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>　　　　　　　　　　　　-->
        <!--</encoder>　　　　　　　　　　-->
    <!--</appender>　　　　　　　　　-->
    <!--<root level="info">　-->
        <!--<appender-ref ref="STDOUT" />　　　　　　　　-->
        <!--<appender-ref ref="FILE"/>　　　　　　　　　　-->
    <!--</root>-->

    <!-- DEBUG级别 -->
    <appender name="FILE_DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">

    <!-- 级别过滤器 -->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
    <!-- 设置过滤级别 -->
    <level>DEBUG</level>
    <!-- 用于配置符合过滤条件的操作 -->
    <onMatch>ACCEPT</onMatch>
    <!-- 用于配置不符合过滤条件的操作 -->
    <onMismatch>DENY</onMismatch>
    </filter>
    <File>${Log_Home}/debug/debug.log</File>
    <!-- 根据时间来制定滚动策略 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    <FileNamePattern>
    ${Log_Home}/debug/debug.%d{yyyy-MM-dd}.%i.log
    </FileNamePattern>
    <!-- 多久后自动清楚旧的日志文件,单位:月 -->
    <MaxHistory>1</MaxHistory>
    <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
    <!-- 默认值是 10MB,文档最大值 -->
    <MaxFileSize>2MB</MaxFileSize>
    </TimeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>

    <encoder>
    <Pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n</Pattern>
    </encoder>
    </appender>

    <!-- INFO级别 -->
    <appender name="FILE_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">

    <!-- 级别过滤器 -->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
    <!-- 设置过滤级别 -->
    <level>INFO</level>
    <!-- 用于配置符合过滤条件的操作 -->
    <onMatch>ACCEPT</onMatch>
    <!-- 用于配置不符合过滤条件的操作 -->
    <onMismatch>DENY</onMismatch>
    </filter>
    <File>${Log_Home}/info/info.log</File>
    <!-- 根据时间来制定滚动策略 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    <FileNamePattern>
    ${Log_Home}/info/info.%d{yyyy-MM-dd}.%i.log
    </FileNamePattern>
    <!-- 多久后自动清楚旧的日志文件,单位:月 -->
    <MaxHistory>1</MaxHistory>
    <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
    <!-- 默认值是 10MB,文档最大值 -->
    <MaxFileSize>2MB</MaxFileSize>
    </TimeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>

    <encoder>
    <Pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n</Pattern>
    </encoder>
    </appender>


    <!-- WARN级别 -->
    <appender name="FILE_WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">

    <!-- 级别过滤器 -->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
    <!-- 设置过滤级别 -->
    <level>WARN</level>
    <!-- 用于配置符合过滤条件的操作 -->
    <onMatch>ACCEPT</onMatch>
    <!-- 用于配置不符合过滤条件的操作 -->
    <onMismatch>DENY</onMismatch>
    </filter>
    <File>${Log_Home}/warn/warn.log</File>
    <!-- 根据时间来制定滚动策略 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    <FileNamePattern>
    ${Log_Home}/warn/warn.%d{yyyy-MM-dd}.%i.log
    </FileNamePattern>
    <!-- 多久后自动清楚旧的日志文件,单位:月 -->
    <MaxHistory>1</MaxHistory>
    <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
    <!-- 默认值是 10MB,文档最大值 -->
    <MaxFileSize>2MB</MaxFileSize>
    </TimeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>

    <encoder>
    <Pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n</Pattern>
    </encoder>
    </appender>

    <!-- ERROR级别 -->
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">

    <!-- 级别过滤器 -->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
    <!-- 设置过滤级别 -->
    <level>ERROR</level>
    <!-- 用于配置符合过滤条件的操作 -->
    <onMatch>ACCEPT</onMatch>
    <!-- 用于配置不符合过滤条件的操作 -->
    <onMismatch>DENY</onMismatch>
    </filter>
    <File>${Log_Home}/error/error.log</File>
    <!-- 根据时间来制定滚动策略 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    <FileNamePattern>
    ${Log_Home}/error/error.%d{yyyy-MM-dd}.%i.log
    </FileNamePattern>
    <!-- 多久后自动清楚旧的日志文件,单位:月 -->
    <MaxHistory>1</MaxHistory>
    <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
    <!-- 默认值是 10MB,文档最大值 -->
    <MaxFileSize>2MB</MaxFileSize>
    </TimeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>

    <encoder>
    <Pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n</Pattern>
    </encoder>
    </appender>
    <!-- 当前日志总级别为TRACE、DEBUG、INFO、 WARN、ERROR、ALL和 OF -->
    <!-- the level of the root level is set to DEBUG by default.       -->
    <root level="info">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="FILE_DEBUG" />
    <appender-ref ref="FILE_INFO" />
    <appender-ref ref="FILE_WARN" />
    <appender-ref ref="FILE_ERROR" />
    </root>
</configuration>